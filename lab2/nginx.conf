worker_processes 3;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex on; # set to 'on' if nginx worker_processes > 1
}

http {
    server_tokens   off;
    include mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;
    sendfile on;

    upstream api {
        server web-labs-2021_movie_api_1:8080 weight=3;
        server web-labs-2021_movie_api_2:8080 weight=1;
        server web-labs-2021_movie_api_3:8080 weight=1;
    }

    server {
        gzip on;
        gzip_types          text/plain application/xml;
        gzip_proxied        no-cache no-store private expired auth;
        gzip_min_length     1000;
        listen              80;
        listen              443 ssl http2;
        server_name         localhost;
        ssl_certificate     /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key /etc/nginx/ssl/localhost.key;

        root /static/html;

        location ^~ / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass http://api;
        }

        location = /index.html {
            http2_push /cat.jpeg;
        }

        location /html/ {
            gzip_static on;
            # cache
            expires 30d;
            add_header Vary Accept-Encoding;
            access_log off;
            root /static;
        }

        location /img/ {
            gzip_static on;
            # cache
            expires 30d;
            add_header Vary Accept-Encoding;
            access_log off;
            root /static;
        }

        location /service1 {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass http://service_1:8081/;
        }

            location /service2 {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass http://service_2:8082/;
        }

            location /temp1/ {
            gzip_static on;
            # cache
            expires 30d;
            add_header Vary Accept-Encoding;
            access_log off;
            proxy_pass http://service_1:8081/temp1;
        }

            location /temp2/ {
            gzip_static on;
            # cache
            expires 30d;
            add_header Vary Accept-Encoding;
            access_log off;
            proxy_pass http://service_2:8082/temp2;
        }

            location = /basic_status {
            stub_status;
        }
    }
}
